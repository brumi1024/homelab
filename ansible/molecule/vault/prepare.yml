---
- hosts: all
  become: true
  vars:
    root_ca_dir: "/root/ownca/root"
    vault_tls_dir: "/opt/vault/tls"
  tasks:

    # Create a temporary root CA and TLS key pair for Vault server instance
    - name: Install pip
      apt:
        name: pip
        state: present

    - name: Install required dependencies
      pip:
        name: cryptography>=1.2.3
        state: present

    - name: Create root CA directory
      file:
        path: "{{ root_ca_dir }}"
        mode: 0755
        owner: "root"
        group: "root"
        state: directory

    # create root CA
    - name: Generate root key
      community.crypto.openssl_privatekey:
        path: "{{ root_ca_dir }}/ca_key.pem"
        mode: 0400
        owner: root
        group: root

    - name: Create root CSR
      community.crypto.openssl_csr:
        path: "{{ root_ca_dir }}/ca.csr"
        privatekey_path: "{{ root_ca_dir }}/ca_key.pem"
        common_name: "Root CA"
        use_common_name_for_san: false
        basic_constraints:
          - "CA:TRUE"
        basic_constraints_critical: true
        key_usage:
          - keyCertSign
        key_usage_critical: true
        mode: 0640
        owner: root
        group: root

    - name: Generate root CA certificate
      community.crypto.x509_certificate:
        path: "{{ root_ca_dir }}/ca.crt"
        provider: selfsigned
        privatekey_path: "{{ root_ca_dir }}/ca_key.pem"
        csr_path: "{{ root_ca_dir }}/ca.csr"
        mode: 0644
        owner: root
        group: root

    # generate Vault key pair
    - name: Create Vault TLS directory
      file:
        path: "{{ vault_tls_dir }}"
        mode: 0755
        owner: "vault"
        group: "vault"
        state: directory

    - name: Generate Vault private key
      community.crypto.openssl_privatekey:
        path: "{{ vault_tls_dir }}/key.pem"
        mode: 0400
        owner: "vault"
        group: "vault"

    - name: Generate vault CSR
      community.crypto.openssl_csr:
        path: "{{ vault_tls_dir }}/host.csr"
        privatekey_path: "{{ vault_tls_dir }}/key.pem"
        basic_constraints:
          - "CA:FALSE"
        basic_constraints_critical: true
        common_name: "vault"
        subject_alt_name:
          - "IP:{{ ansible_host }}"
          - "DNS:{{ ansible_fqdn }}"
          - "IP:127.0.0.1"
          # - "IP:{{ cluster_server_ip }}"
          - "DNS:vault.service.consul"
        mode: 0640
        owner: "vault"
        group: "vault"

    - name: Sign Vault certificate with root CA
      community.crypto.x509_certificate:
        path: "{{ vault_tls_dir }}/vault.crt"
        csr_path: "{{ vault_tls_dir }}/host.csr"
        provider: ownca
        ownca_path: "{{ root_ca_dir }}/ca.crt"
        ownca_privatekey_path: "{{ root_ca_dir }}/ca_key.pem"
        ownca_not_after: "+365d"
        owner: "vault"
        group: "vault"
        mode: 0640

    # Trust root CA
    - name: Create Vault trust store directory
      file:
        path: "/usr/share/ca-certificates/vault"
        mode: 0755
        owner: "vault"
        group: "vault"
        state: directory

    - name: Copy signed certificate and CA
      copy:
        src: "{{ root_ca_dir }}/ca.crt"
        dest: "/usr/share/ca-certificates/vault/ca.crt"
        mode: 0640
        owner: "vault"
        group: "vault"
        remote_src: true

    - name: Add certificate-chain to remote ca-certificates.conf
      lineinfile:
        path: "/etc/ca-certificates.conf"
        line: "vault/ca.crt"

    - name: Update remote trust store
      command: update-ca-certificates
      register: update_cert_output
      changed_when: '"1 added" in update_cert_output.stdout'
