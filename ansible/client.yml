---
- hosts: client
  become: true
  vars:
    nfs_ip: "10.10.10.102"
    nfs_share_mounts:
      - src: "{{ nfs_ip }}:/home/debian/apps/prod-apps"
        path: "/mnt/storage"
        state: mounted
      - src: "{{ nfs_ip }}:/home/debian/apps/tls"
        path: "{{ consul_template_dir }}/tls"
        state: mounted

    cluster_server_ip: "10.10.10.110"
    cluster_client_ip: "{{ ansible_default_ipv4.address }}"

    consul_template_dir: "/opt/consul-template"

    nomad_config_dir: "/etc/nomad.d"
    nomad_tls_dir: "/opt/nomad/data/tls"

  pre_tasks:
    # TODO too dependent on server.yml playbook
    - name:
      file:
        path: "/usr/share/ca-certificates/vault"
        state: directory
        owner: vault
        group: vault
        mode: 0640
    - name: Copy certificate-chain to remote host
      copy:
        src: "/tmp/certs/vault.crt"
        dest: "/usr/share/ca-certificates/vault/vault.crt"
        mode: "0640"
        owner: "vault"
        group: "vault"
    - name: Add certificate-chain to remote ca-certificates.conf
      lineinfile:
        path: "/etc/ca-certificates.conf"
        line: "vault/vault.crt"
    - name: Update remote trust store
      command: update-ca-certificates
      register: update_cert_output
      changed_when: '"1 added" in update_cert_output.stdout'

    - name: Vault status check
      command: "vault status"
      environment:
        VAULT_ADDR: "https://{{ cluster_server_ip }}:8200"
      changed_when: false

    - name: Vault login
      block:
        - name: Get root token from Bitwarden
          script: "./roles/vault/files/bw_get.sh 'Vault Root Token' {{ bw_password }}"
          register: vault_root_token_raw

        - set_fact:
            vault_root_token_json: "{{ vault_root_token_raw.stdout | from_json }}"

        - name: Login
          shell:
            cmd: "vault login --format json {{ vault_root_token_json.data.data }}"
          environment:
            VAULT_ADDR: "https://{{ cluster_server_ip }}:8200"
          register: vault_login_operation
          when:
            - vault_root_token_json is defined
            - vault_root_token_json.data.data is defined
            - vault_root_token_json.success
          changed_when: false
          failed_when: vault_login_operation.rc == 1

  roles:
    - name: Mount NFS shares
      role: kencx.ansible.nfs

    - role: consul-template
      vars:
        vault_address: "{{ cluster_server_ip }}"

    - role: consul
      vars:
        consul_server_ip: "{{ cluster_server_ip }}"
        consul_vault_addr: "https://{{ cluster_server_ip }}:8200"
        consul_common_name: "client.dc1.consul"
        consul_ip_sans: "127.0.0.1,{{ cluster_client_ip }}"

    - role: nomad
      vars:
        nomad_server_ip: "{{ cluster_server_ip }}"
        nomad_vault_addr: "https://{{ cluster_server_ip }}:8200"
        nomad_common_name: "client.global.nomad"
        nomad_ip_sans: "127.0.0.1,{{ cluster_client_ip }}"

  tasks:
    - name: Register Nomad client as Consul service
      import_tasks: nomad_consul_register.yml

    - name: Goss smoke test
      import_role:
        name: kencx.ansible.goss
      vars:
        - goss_dir: "./goss"
        - goss_file: "client.yml"
