---
# limit to template group when running manually
- hosts: all
  become: true
  vars:
    user: debian

  pre_tasks:
    - name: Ensure Debian user created
      user:
        name: debian
        shell: /bin/bash
        groups: sudo
        append: true
        create_home: true
        state: present

  roles:
    - name: Install Common
      role: common

    - name: Install docker
      role: geerlingguy.docker
      vars:
        # install docker compose plugin instead of docker-compose binary
        - docker_install_compose_plugin: true
        - docker_install_compose: false
        - docker_users: ["{{ user }}"]

    - name: Security hardening
      role: kencx.ansible.security
      vars:
        - ssh_disable_root_login: true
        - ufw_rules:
            - {rule: 'allow', port: '22', proto: 'tcp', comment: 'ssh'}
            - {rule: 'allow', port: '4646', proto: 'tcp', comment: 'nomad HTTP'}
            - {rule: 'allow', port: '4647', proto: 'tcp', comment: 'nomad RPC'}
            - {rule: 'allow', port: '4648', proto: 'tcp', comment: 'nomad Serf WAN'}  # server only
            - {rule: 'allow', port: '4648', proto: 'udp', comment: 'nomad Serf WAN'}  # server only
            - {rule: 'allow', port: '8200', proto: 'tcp', comment: 'vault UI'}
            - {rule: 'allow', port: '8300', proto: 'tcp', comment: 'consul RPC'}  # server only
            - {rule: 'allow', port: '8301', proto: 'tcp', comment: 'consul Serf LAN'}
            - {rule: 'allow', port: '8301', proto: 'udp', comment: 'consul Serf LAN'}
            - {rule: 'allow', port: '8302', proto: 'tcp', comment: 'consul Serf WAN'}
            - {rule: 'allow', port: '8302', proto: 'udp', comment: 'consul Serf WAN'}
            - {rule: 'allow', port: '8501', proto: 'tcp', comment: 'consul HTTPS'}
            - {rule: 'allow', port: '8600', proto: 'tcp', comment: 'consul DNS'}
            - {rule: 'allow', port: '8600', proto: 'udp', comment: 'consul DNS'}

    - name: Install goss
      role: kencx.ansible.goss
      vars:
        - goss_dir: "./goss"
        - goss_file: "base.yml"

  tasks:
    - name: Reset Nomad
      block:
        - name: Stop Nomad
          systemd:
            name: nomad
            state: stopped

        - name: Delete Nomad data
          file:
            path: /opt/nomad/data
            state: absent
