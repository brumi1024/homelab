---
- name: Check aurutils installed
  command:
    cmd: command -v aur
  changed_when: false
  failed_when: false
  ignore_errors: true
  register: aurutils_install

- import_tasks: install_aurutils.yml
  become: true
  when:
    - aurutils_install.stdout is defined
    - aurutils_install.stdout != "/usr/bin/aur"

- name: Create repository user
  become: true
  user:
    name: "{{ arch_repository_user }}"
    groups: wheel
    append: true

- name: Add sudoers for repository user
  become: true
  copy:
    content: |
      %wheel ALL=(ALL) NOPASSWD: /usr/bin/arch-nspawn
      %wheel ALL=(ALL) NOPASSWD: /usr/bin/aur
      %wheel ALL=(ALL) NOPASSWD:SETENV: /usr/bin/makechrootpkg
    dest: "/etc/sudoers.d/50_arch_repo"
    owner: root
    group: root
    mode: 0440
    validate: /usr/sbin/visudo -csf %s

- import_tasks: repository.yml
  become: true

- name: Copy chroot conf files
  become: true
  template:
    src: "{{ item }}.conf.j2"
    dest: "/etc/{{ item }}.conf"
    owner: root
    group: root
    mode: 0644
  with_items:
    - makepkg-chroot
    - pacman-chroot

- name: Copy aur wrapper script
  import_tasks: aura.yml
  become: true

- name: Sync AUR packages
  become: true
  become_user: "{{ arch_repository_user }}"
  command:
    cmd: "aura add {{ item }}"
  with_items: "{{ arch_repository_packages }}"
  when: arch_repository_sync_packages

- name: Clean manually installed aurutils package
  file:
    path: "{{ arch_repository_aurutils_temp_dir }}"
    state: absent
  when:
    - aurutils_install.stdout is defined
    - aurutils_install.stdout == "/usr/bin/aur"

- name: Setup updates
  import_tasks: updates.yml
  become: true
