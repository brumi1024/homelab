---
- name: Check Vault status
  command: vault status -format=json
  register: vault_status_raw
  changed_when: false
  failed_when: vault_status_raw.rc == 1

- set_fact:
    vault_status_json: "{{ vault_status_raw.stdout | from_json }}"

- name: Initialize Vault
  command: vault operator init -key-shares=1 -key-threshold=1 -format=json
  register: vault_init_raw
  when: not vault_status_json.initialized

- set_fact:
    vault_init_json: "{{ vault_init_raw.stdout | from_json }}"
  when: vault_init_raw is defined and vault_init_raw.stdout is defined

# - name: Install Bitwarden CLI
#   become: true
#   unarchive:
#     src: "https://vault.bitwarden.com/download/?app=cli&platform=linux"
#     dest: "/usr/bin"
#     remote_src: true
#     mode: 0755
#     owner: root
#     group: root

- name: Store unseal keys in Bitwarden
  become_user: debian
  script: "bw_store.sh 'Vault Unseal Key' {{ vault_init_json.unseal_keys_hex[0] }} {{ bw_password }}"
  when: vault_init_json is defined and vault_init_json.unseal_keys_hex is defined
  no_log: true
  register: bw_vault_unseal_key
  failed_when: bw_vault_unseal_key.stdout == "bw get failed"

# - debug:
#     var: bw_vault_unseal_key.stdout

- name: Save root token in Bitwarden
  become_user: debian
  script: "bw_store.sh 'Vault Root Token' {{ vault_init_json.root_token }} {{ bw_password }}"
  when: vault_init_json is defined and vault_init_json.root_token is defined
  no_log: true
  register: bw_vault_root_token
  failed_when: bw_vault_root_token.stdout == "bw get failed"

# - debug:
#     var: bw_vault_root_token.stdout

- name: Unseal Vault
  shell:
    cmd: "vault operator unseal --format json {{ vault_init_json.unseal_keys_hex[0] }}"
  register: vault_unseal_raw
  when:
    - vault_status_json is defined
    - vault_status_json.sealed
  changed_when: false
  failed_when: vault_unseal_raw.rc == 1

# - set_fact:
#     vault_unseal_json: "{{ vault_unseal_raw.stdout | from_json }}"
#   when:
#     - vault_unseal_raw is defined
#     - vault_unseal_raw.stdout is defined
#     - vault_unseal_raw.rc == 0

# - debug:
#     var: vault_unseal_json
#   when: vault_unseal_raw is defined and vault_unseal_raw.stdout is defined

- name: Login to Vault with root token
  shell:
    cmd: vault login --format json {{ vault_init_json.root_token }}
  register: vault_login_raw
  changed_when: false
  failed_when: vault_login_raw.rc != 0

# - set_fact:
#     vault_login_json: "{{ vault_login_raw.stdout | from_json }}"
#   when:
#     - vault_login_raw is defined
#     - vault_login_raw.stdout is defined
#     - vault_login_raw.rc == 0

# - debug:
#     var: vault_login_json
#   when: vault_login_raw is defined and vault_login_raw.stdout is defined

- name: Check Vault post-login status
  command: vault status -format=json
  register: vault_post_status_raw
  changed_when: false
  failed_when: vault_post_status_raw.rc == 1

- set_fact:
    vault_post_status_json: "{{ vault_post_status_raw.stdout | from_json }}"
  when: vault_post_status_raw.stdout is defined

- name: Vault post-login status
  debug:
    var: vault_post_status_json
  when: vault_post_status_json is defined
