---
- name: Lookup latest version of blocky
  set_fact:
    blocky_version: "{{ (lookup('url', 'https://api.github.com/repos/0xERR0R/blocky/releases/latest', split_lines=False) | from_json).get('tag_name') | replace('v', '') }}"
  when: "blocky_version == 'latest'"

- name: Check blocky release metadata
  uri:
    url: "https://api.github.com/repos/0xERR0R/blocky/releases/tags/v{{ blocky_version }}"
    return_content: true
  register: blocky_release

- name: Get checksum
  set_fact:
    blocky_checksum: "{{ lookup('url', item.browser_download_url).split(',') |
        select('regex', regex) |
        first | split(' ') | first }}"
  vars:
    regex: "{{ '^.* ' ~ blocky_tar|trim }}"
  run_once: true
  loop: "{{ blocky_release.json.assets }}"
  when: "'blocky_checksums.txt' in item.name"
  no_log: true

- name: Download blocky
  get_url:
    url: "{{ item.browser_download_url }}"
    dest: "/tmp/blocky-{{ blocky_version }}.tgz"
    checksum: "sha256:{{ blocky_checksum }}"
  loop: "{{ blocky_release.json.assets }}"
  when: "blocky_tar in item.name"
  no_log: true

- name: Install blocky
  unarchive:
    src: "/tmp/blocky-{{ blocky_version }}.tgz"
    dest: /usr/local/bin
    remote_src: true
    include: blocky
    creates: /usr/local/bin/blocky
    keep_newer: true
    extra_opts:
      - --no-anchored
    owner: root
    group: root
    mode: 0755

- name: Create blocky directory
  file:
    path: /etc/blocky
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy blocky.service file
  template:
    src: blocky.service.j2
    dest: /etc/systemd/system/blocky.service
    owner: root
    group: root
    mode: 0644
  notify: restart blocky

- name: Copy configuration file
  template:
    src: config.yml.j2
    dest: /etc/blocky/config.yml
    owner: root
    group: root
    mode: 0644
  notify: restart blocky

- name: Start and enable blocky
  systemd:
    name: blocky
    state: started
    enabled: true
    daemon_reload: true

- wait_for:
    port: "{{ blocky_dns_port }}"
