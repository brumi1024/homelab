---
- name: Install docker module
  pip:
    name: docker

- name: Create docker networks
  community.docker.docker_network:
    name: "{{ item }}"
  with_items:
    - "{{ proxy_network }}"
    - "{{ socket_proxy_network }}"

- name: Ensure docker directory structure exists
  become: true
  become_user: "{{ user }}"
  file:
    path: "{{ docker_destination }}/{{ item.path }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
  with_filetree: "../templates/"
  when: item.state == "directory" and item.path != "drone"

- name: Copy compose templates to remote
  become: true
  become_user: "{{ user }}"
  template:
    src: "{{ item.src }}"
    dest: "{{ docker_destination }}/{{ item.path | regex_replace('\\.j2$', '') }}"
    owner: "{{ user }}"
    group: "{{ user }}"
  with_filetree: "../templates/"
  when: (item.state == "file") and (item.path | regex_search('drone') == none)

- name: Start docker containers
  command:
    cmd: "docker-compose -f {{ item }}/docker-compose.yml up -d "
    chdir: "{{ docker_destination }}"
  with_items:
    - traefik
    - gitea
    - portainer
