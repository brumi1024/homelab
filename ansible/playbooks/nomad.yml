---
- hosts: all
  become: true
  vars:
    nomad_config_dir: "/etc/nomad.d"
    nomad_data_dir: "/opt/nomad/data"
    start_cluster: false

  tasks:
    - fail:
        msg: "boolean 'server' must be defined"
      when: server is not defined

    - name: Create Nomad directories
      file:
        path: "{{ item }}"
        mode: 0755
        owner: nomad
        group: nomad
        state: directory
      with_items:
        - "{{ nomad_config_dir }}"
        - "{{ nomad_data_dir }}"

    - name: Install CNI plugins
      block:
        - name: Create directory
          file:
            path: "/opt/cni/bin"
            mode: 0775
            owner: root
            group: root
            state: directory

        - name: CNI bridge plugin exists
          stat:
            path: "/opt/cni/bin/bridge"
          register: cni_bridge

        - name: Unarchive CNI plugins
          unarchive:
            src: "https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz"
            dest: "/opt/cni/bin"
            remote_src: true
          when: not cni_bridge.stat.exists
      when: not server|bool

    - name: Copy service file
      template:
        src: "./templates/nomad/nomad.service.j2"
        dest: "/etc/systemd/system/nomad.service"
        mode: 0644
        owner: root
        group: root
      notify:
        - reload nomad

    - name: Copy Nomad config files
      block:
        - name: Common config
          template:
            src: "./templates/nomad/nomad.hcl.j2"
            dest: "{{ nomad_config_dir }}/nomad.hcl"
            mode: 0644
            owner: nomad
            group: nomad

        - name: Server-only config
          template:
            src: "./templates/nomad/server.hcl.j2"
            dest: "{{ nomad_config_dir }}/server.hcl"
            mode: 0644
            owner: nomad
            group: nomad
          vars:
            - bootstrap_expect: 1
          when: server|bool

        - name: Client-only config
          template:
            src: "./templates/nomad/client.hcl.j2"
            dest: "{{ nomad_config_dir }}/client.hcl"
            mode: 0644
            owner: nomad
            group: nomad
          when: not server|bool
      notify:
        - reload nomad

    # do not start by default
    - name: Start Nomad
      systemd:
        name: nomad
        state: started
        enabled: true
        daemon_reload: true
      register: nomad_started
      when: start_cluster|bool

    # Apply all service and config changes
    - name: Restart Nomad if there are changes
      meta: flush_handlers

    - name: Wait for Nomad port
      wait_for:
        port: 4646
        state: started
      when: start_cluster|bool and server|bool

  handlers:
    - name: reload nomad
      systemd:
        name: nomad
        state: reloaded
      when: not nomad_started.changed
